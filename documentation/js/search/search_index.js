var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.209,1,2.333]],["body/controllers/AppController.html",[0,1.84,1,3.551,2,1.424,3,0.259,4,0.225,5,0.225,6,3.457,7,0.567,8,1.729,9,4.467,10,4.073,11,5.231,12,1.517,13,0.024,14,4.073,15,0.706,16,4.073,17,1.258,18,0.981,19,0.611,20,0.863,21,5.83,22,1.338,23,0.553,24,0.808,25,2.305,26,1.111,27,3.457,28,3.3,29,3.457,30,0.259,31,0.164,32,1.618,33,1.517,34,4.073,35,4.073,36,1.982,37,3.457,38,4.073,39,4.073,40,1.338,41,4.073,42,0.018,43,0.018]],["title/modules/AppModule.html",[44,1.136,45,2.333]],["body/modules/AppModule.html",[1,3.588,2,1.627,3,0.215,4,0.187,5,0.187,13,0.024,23,0.588,24,0.672,28,3.509,29,2.875,30,0.215,31,0.136,42,0.016,43,0.016,44,1.529,45,4.704,46,1.436,47,1.974,48,2.875,49,2.875,50,2.875,51,3.815,52,3.815,53,3.815,54,2.629,55,3.815,56,3.815,57,2.265,58,1.648,59,1.648,60,3.387,61,2.437,62,2.634,63,3.387,64,3.387,65,3.387,66,3.387,67,3.387,68,3.387,69,3.387]],["title/injectables/AppService.html",[28,1.956,70,0.943]],["body/injectables/AppService.html",[3,0.279,4,0.243,5,0.243,7,0.61,8,1.812,9,4.682,13,0.024,15,0.76,17,1.354,18,1.056,19,0.658,20,0.929,22,1.44,23,0.393,24,0.87,28,3.122,30,0.279,31,0.176,37,4.682,40,1.44,42,0.019,43,0.019,70,1.505,71,1.989,72,3.722,73,5.516,74,1.383,75,4.384,76,5.516,77,5.516,78,3.722,79,4.384,80,4.384]],["title/controllers/AuthController.html",[0,1.209,81,2.333]],["body/controllers/AuthController.html",[0,1.122,2,1.122,3,0.204,4,0.177,5,0.177,7,0.446,8,1.472,12,1.669,13,0.024,15,0.777,17,1.384,18,1.079,19,0.672,20,0.95,22,1.472,23,0.561,24,0.637,25,1.815,26,0.875,30,0.204,31,0.129,32,1.274,33,1.195,40,1.472,42,0.015,43,0.015,81,3.024,82,2.722,83,1.974,84,5.165,85,4.189,86,4.481,87,2.722,88,3.751,89,3.207,90,4.481,91,2.536,92,3.357,93,2.347,94,3.207,95,3.207,96,2.232,97,2.722,98,4.481,99,3.804,100,2.536,101,3.804,102,4.481,103,3.207,104,3.179,105,1.974,106,1.974,107,1.974,108,1.974,109,1.974,110,1.195,111,2.758,112,3.179,113,2.164,114,2.923,115,2.722,116,1.36,117,2.722,118,2.164,119,3.207,120,2.722,121,3.207,122,3.207,123,3.207,124,2.758,125,3.207,126,3.207,127,1.974,128,3.207]],["title/modules/AuthModule.html",[44,1.136,51,2.127]],["body/modules/AuthModule.html",[2,1.718,3,0.233,4,0.203,5,0.203,13,0.024,23,0.581,24,0.728,30,0.233,31,0.148,42,0.017,43,0.017,44,1.614,46,1.556,47,2.083,51,4.149,54,2.692,57,2.391,58,1.785,59,1.785,61,2.573,62,2.781,81,3.738,110,1.367,114,3.593,115,3.114,129,3.114,130,3.669,131,3.114,132,3.907,133,3.669,134,3.669,135,2.258,136,3.669,137,2.749,138,2.258,139,2.391,140,3.114,141,2.258,142,2.258,143,3.669,144,3.669,145,3.114,146,3.669,147,3.669,148,3.669]],["title/injectables/AuthService.html",[70,0.943,114,1.956]],["body/injectables/AuthService.html",[3,0.204,4,0.177,5,0.177,7,0.446,8,1.472,13,0.024,15,0.777,17,1.384,18,1.079,19,0.672,20,0.95,22,1.054,23,0.546,24,0.637,30,0.204,31,0.129,33,1.669,36,2.513,40,1.054,42,0.015,43,0.015,70,1.223,71,1.455,85,3.357,87,3.804,88,3.751,92,2.403,96,1.955,114,2.536,116,1.36,117,3.804,137,2.403,149,2.722,150,2.705,151,2.536,152,1.815,153,2.221,154,6.256,155,3.207,156,2.536,157,3.207,158,2.347,159,2.722,160,1.815,161,2.164,162,3.207,163,3.357,164,3.804,165,2.923,166,1.974,167,2.347,168,2.403,169,2.536,170,2.347,171,3.804,172,4.481,173,3.357,174,4.481,175,4.481,176,3.207,177,3.357,178,1.78,179,2.722,180,3.207]],["title/classes/CreateGameDto.html",[31,0.139,181,1.956]],["body/classes/CreateGameDto.html",[3,0.136,4,0.118,5,0.118,7,0.298,12,2.046,13,0.023,15,1.011,19,0.875,20,0.974,23,0.298,26,0.584,30,0.136,31,0.134,42,0.011,43,0.011,74,1.339,93,2.406,99,2.822,181,1.882,182,0.661,183,5.059,184,1.604,185,1.163,186,3.054,187,2.704,188,3.46,189,3.46,190,3.054,191,3.46,192,2.307,193,3.46,194,3.46,195,3.46,196,2.822,197,3.325,198,4.734,199,3.576,200,3.325,201,2.141,202,2.141,203,3.325,204,3.325,205,3.325,206,3.325,207,3.325,208,1.882,209,3.325,210,3.325,211,3.325,212,3.325,213,3.945,214,3.325,215,3.325,216,3.325,217,3.325,218,3.325,219,3.325,220,3.325,221,3.325,222,3.325,223,3.325,224,5.265,225,3.325,226,3.325,227,3.325,228,3.325,229,3.325,230,3.325,231,2.141,232,4.595,233,3.325,234,3.325,235,2.141,236,2.141,237,3.9,238,3.325,239,2.141,240,3.325,241,3.325,242,3.325,243,3.46,244,3.325,245,3.325,246,2.141,247,2.141,248,1.818,249,3.325,250,3.325,251,3.325,252,2.141,253,3.325,254,3.325,255,2.141,256,2.141,257,3.325,258,3.325,259,3.325,260,2.141,261,3.214,262,4.076,263,2.508,264,3.9,265,2.141,266,1.445,267,1.445,268,1.212,269,2.491,270,1.818,271,3.325,272,2.141,273,2.141,274,2.141]],["title/classes/CreateGenderDto.html",[31,0.139,275,1.956]],["body/classes/CreateGenderDto.html",[3,0.245,4,0.213,5,0.213,7,0.536,12,1.891,13,0.024,15,0.88,18,1.367,19,0.762,20,1.076,23,0.455,26,1.052,30,0.245,31,0.204,42,0.017,43,0.017,74,1.279,93,2.658,182,1.19,185,1.775,187,2.303,198,3.803,199,3.415,261,3.213,263,3.124,266,2.601,267,2.601,268,2.181,275,2.873,276,4.818,277,2.888,278,3.493,279,2.888,280,1.775,281,5.076,282,5.076,283,3.854,284,3.854,285,3.854,286,4.309,287,3.124,288,5.076,289,3.854,290,3.854,291,3.854,292,3.854,293,3.854,294,3.854,295,3.854,296,3.854]],["title/classes/CreateProfileDto.html",[31,0.139,297,1.956]],["body/classes/CreateProfileDto.html",[3,0.218,4,0.19,5,0.19,7,0.478,12,1.996,13,0.024,15,0.928,19,0.804,23,0.422,26,0.938,30,0.218,31,0.189,42,0.016,43,0.016,74,1.32,182,1.062,185,1.644,187,2.431,192,3.033,195,2.918,196,3.991,199,3.525,248,2.918,261,3.26,263,2.894,264,3.991,266,2.32,267,2.32,268,1.946,269,2.576,270,2.918,278,3.298,287,2.894,297,2.661,298,4.889,299,2.576,300,4.014,301,4.702,302,4.702,303,3.438,304,4.702,305,5.286,306,4.702,307,4.702,308,4.702,309,4.702,310,4.702,311,3.438,312,4.702,313,4.702,314,4.702,315,3.438,316,3.991,317,4.702,318,3.438,319,3.438,320,1.946]],["title/classes/CreateUserDto.html",[31,0.139,321,1.956]],["body/classes/CreateUserDto.html",[3,0.172,4,0.15,5,0.15,7,0.378,12,2.147,13,0.024,15,0.999,18,1.133,19,0.865,23,0.357,26,0.741,30,0.172,31,0.16,42,0.013,43,0.013,74,1.342,93,2.082,100,3.584,165,2.663,166,2.896,173,4.318,182,0.838,185,1.39,187,2.615,199,3.675,208,2.251,213,2.979,261,3.37,263,3.189,266,1.832,267,1.832,268,1.536,269,2.033,279,2.033,316,4.398,320,2.932,321,2.251,322,5.054,323,2.033,324,4.706,325,4.132,326,3.176,327,3.976,328,4.398,329,2.714,330,2.714,331,3.976,332,2.714,333,2.304,334,3.375,335,3.375,336,2.714,337,3.375,338,2.714,339,3.976,340,3.976,341,2.979,342,2.714,343,2.714,344,3.976,345,2.714,346,2.714,347,3.976,348,3.976,349,3.976,350,3.976,351,2.714,352,2.714,353,3.976,354,3.375,355,2.714,356,2.714,357,2.714,358,2.714,359,2.714,360,2.714,361,2.714]],["title/classes/Game.html",[31,0.139,362,1.956]],["body/classes/Game.html",[3,0.247,4,0.215,5,0.215,7,0.542,13,0.023,15,1.157,19,1.002,20,1.083,30,0.247,31,0.157,42,0.017,43,0.017,74,1.465,182,1.202,185,1.787,186,4.274,187,2.588,188,4.842,190,4.274,192,3.229,193,4.842,194,4.842,237,5.141,280,1.995,362,2.892,363,3.305,364,3.893,365,3.893,366,3.893,367,3.893,368,3.893,369,3.893,370,3.893,371,3.893]],["title/controllers/GameController.html",[0,1.209,372,2.333]],["body/controllers/GameController.html",[0,0.871,2,0.871,3,0.158,4,0.138,5,0.138,7,0.346,8,1.226,12,1.982,13,0.024,15,0.922,17,1.534,18,1.196,19,0.746,20,1.053,22,1.748,23,0.501,24,0.494,25,1.409,26,0.679,30,0.158,31,0.1,32,0.989,33,0.927,40,1.748,42,0.013,43,0.013,74,1.291,83,1.533,91,3.161,104,2.296,105,2.296,106,1.533,107,1.533,108,1.533,109,1.533,110,0.927,111,2.296,112,3.437,116,1.056,124,3.275,127,1.533,178,0.989,181,3.161,198,4.462,208,3.371,280,2.23,287,2.296,362,1.409,372,2.517,373,2.114,374,1.389,375,2.417,376,1.815,377,3.73,378,1.815,379,2.114,380,1.68,381,2.517,382,2.49,383,1.866,384,3.352,385,2.517,386,2.517,387,2.49,388,1.212,389,1.866,390,2.49,391,2.49,392,1.866,393,2.517,394,2.49,395,1.212,396,3.665,397,1.866,398,2.517,399,2.49,400,1.68,401,1.68,402,2.532,403,2.114,404,2.795,405,1.212,406,2.49,407,2.49,408,1.866,409,2.49,410,2.49,411,1.68,412,1.68,413,2.49,414,1.68,415,2.114,416,2.49,417,1.68,418,1.68,419,2.49,420,2.49]],["title/modules/GameModule.html",[44,1.136,52,2.127]],["body/modules/GameModule.html",[2,1.836,3,0.258,4,0.224,5,0.224,13,0.024,23,0.571,24,0.806,30,0.258,31,0.163,42,0.018,43,0.018,44,1.725,46,1.721,47,2.227,52,4.144,54,2.769,57,2.555,58,1.975,59,1.975,61,2.749,62,2.972,110,1.512,135,2.498,138,2.498,139,1.975,141,2.498,142,2.498,372,3.928,402,3.695,403,3.445,421,3.445,422,3.445,423,4.059,424,4.059,425,4.059]],["title/injectables/GameService.html",[70,0.943,402,1.956]],["body/injectables/GameService.html",[3,0.141,4,0.122,5,0.122,7,0.308,8,1.12,13,0.024,15,0.963,17,1.647,18,1.448,19,0.8,20,1.131,22,1.752,23,0.478,24,0.439,30,0.141,31,0.089,32,0.878,33,0.824,36,2.024,40,1.659,42,0.012,43,0.012,70,0.93,71,1.003,74,1.316,116,0.938,150,3.252,151,1.252,152,1.252,153,1.856,156,1.929,158,3.149,160,1.252,167,2.448,169,1.252,170,1.158,178,1.354,181,3.019,189,3.967,280,2.059,320,2.646,362,1.929,374,1.549,375,2.275,376,1.659,378,2.024,379,2.894,388,1.659,395,1.659,396,3.532,402,1.929,404,2.554,405,1.076,426,1.877,427,2.3,428,2.212,429,2.212,430,1.785,431,2.212,432,2.212,433,2.3,434,2.212,435,1.361,436,2.212,437,2.212,438,1.492,439,1.252,440,1.492,441,2.212,442,3.6,443,3.409,444,2.3,445,4.674,446,3.154,447,2.3,448,2.212,449,3.409,450,1.492,451,1.492,452,2.807,453,1.877,454,2.212]],["title/classes/Gender.html",[31,0.139,455,2.127]],["body/classes/Gender.html",[3,0.303,4,0.264,5,0.264,7,0.663,13,0.023,15,1.007,18,1.509,19,0.872,20,1.231,30,0.303,31,0.192,42,0.02,43,0.02,74,1.382,182,1.472,185,2.031,280,2.191,455,3.575,456,4.046,457,4.767,458,4.767]],["title/controllers/GenderController.html",[0,1.209,459,2.333]],["body/controllers/GenderController.html",[0,0.808,2,0.808,3,0.147,4,0.128,5,0.128,7,0.321,8,1.158,12,1.918,13,0.024,15,0.892,17,1.476,18,1.152,19,0.718,20,1.013,22,1.692,23,0.506,24,0.458,25,1.307,26,0.63,30,0.147,31,0.093,32,0.917,33,0.86,40,1.571,42,0.012,43,0.012,74,1.264,83,1.421,91,3.072,93,3.186,104,2.169,105,2.169,106,1.421,107,1.421,108,1.421,109,1.421,110,0.86,111,2.169,112,3.34,116,0.979,124,3.169,127,1.421,158,3.047,178,1.697,208,3.294,275,3.072,280,2.194,286,4.94,287,3.744,374,1.313,375,2.327,376,1.715,378,2.079,380,1.559,381,2.378,383,1.73,384,3.227,385,2.378,386,2.378,388,1.124,389,1.73,392,1.73,393,2.378,395,1.124,397,1.73,398,2.378,400,1.559,401,1.559,405,1.124,408,1.73,411,1.559,412,1.559,414,1.559,417,1.559,418,1.559,430,1.209,455,2.169,459,2.378,460,1.96,461,1.96,462,2.31,463,2.31,464,3.524,465,3.524,466,2.31,467,2.31,468,3.582,469,2.31,470,2.419,471,1.96,472,2.64,473,1.96,474,2.31,475,2.31,476,2.31,477,2.31,478,2.31,479,1.96,480,2.31,481,1.73,482,2.31]],["title/modules/GenderModule.html",[44,1.136,53,2.127]],["body/modules/GenderModule.html",[2,1.836,3,0.258,4,0.224,5,0.224,13,0.024,23,0.571,24,0.806,30,0.258,31,0.163,42,0.018,43,0.018,44,1.725,46,1.721,47,2.227,53,4.144,54,2.769,57,2.555,58,1.975,59,1.975,61,2.749,62,2.972,110,1.512,135,2.498,138,2.498,139,1.975,141,2.498,142,2.498,459,3.928,470,3.695,471,3.445,483,3.445,484,3.445,485,4.059,486,4.059,487,4.059]],["title/injectables/GenderService.html",[70,0.943,470,1.956]],["body/injectables/GenderService.html",[3,0.131,4,0.114,5,0.114,7,0.287,8,1.06,13,0.024,15,0.939,17,1.6,18,1.447,19,0.778,20,1.098,22,1.702,23,0.486,24,0.409,30,0.131,31,0.083,32,0.818,33,0.767,36,1.935,40,1.605,42,0.011,43,0.011,70,0.88,71,0.935,74,1.294,116,0.874,150,3.198,151,1.166,152,1.166,153,1.787,156,2.251,158,3.087,160,1.166,167,2.356,169,1.166,170,1.079,178,1.281,186,2.418,190,2.418,192,1.826,275,3.173,278,3.007,280,2.235,320,3.584,374,1.202,375,2.19,376,1.57,378,1.935,388,1.57,395,1.57,405,1.003,427,2.177,430,1.69,433,2.177,435,1.268,438,1.391,439,1.166,440,1.391,442,3.497,444,2.177,446,3.497,447,2.177,450,1.391,451,1.391,452,2.684,455,1.268,461,2.739,468,2.77,470,1.826,472,2.418,473,1.749,488,1.749,489,2.061,490,2.061,491,2.061,492,2.061,493,2.061,494,2.061,495,2.061,496,1.391,497,2.061,498,2.739,499,3.227,500,2.739,501,3.227,502,2.061,503,2.061,504,1.749,505,3.227,506,2.061,507,2.061,508,2.061]],["title/injectables/JwtStrategy.html",[70,0.943,132,2.127]],["body/injectables/JwtStrategy.html",[3,0.224,4,0.195,5,0.195,7,0.49,8,1.57,13,0.024,15,0.828,17,1.476,18,1.151,19,0.873,20,1.013,22,1.157,23,0.522,24,0.699,30,0.224,31,0.142,32,1.399,33,1.312,36,1.714,40,1.157,42,0.016,43,0.016,70,1.304,71,1.598,74,0.747,96,1.897,110,1.312,132,2.942,139,1.714,140,2.99,145,2.99,150,2.841,151,1.994,152,1.994,153,2.311,156,2.705,159,2.99,160,1.994,165,2.705,167,1.845,168,2.639,169,1.994,170,1.845,171,2.99,177,2.639,178,1.399,341,2.639,435,2.168,509,4.605,510,2.99,511,4.78,512,3.523,513,4.78,514,4.78,515,3.523,516,3.523,517,3.523,518,3.523,519,2.99,520,1.994,521,3.523,522,3.523,523,3.523,524,3.523,525,3.523,526,3.523,527,3.523,528,3.523,529,3.523]],["title/classes/LoginAuthDto.html",[31,0.139,88,2.127]],["body/classes/LoginAuthDto.html",[3,0.253,4,0.221,5,0.221,7,0.555,12,1.933,13,0.024,15,0.9,19,0.779,23,0.465,26,1.088,30,0.253,31,0.209,42,0.018,43,0.018,74,1.296,88,3.195,100,3.46,165,3.267,166,3.552,173,3.889,182,1.232,185,1.815,187,2.355,199,3.46,213,3.889,261,3.267,263,3.195,268,2.257,328,4.406,333,3.385,334,4.406,335,4.406,354,4.406,530,4.899,531,2.988,532,3.385,533,3.988,534,3.988,535,5.191]],["title/modules/PrismaModule.html",[44,1.136,54,1.466]],["body/modules/PrismaModule.html",[3,0.281,4,0.244,5,0.244,13,0.024,23,0.497,24,0.877,30,0.281,31,0.178,42,0.019,43,0.019,44,1.821,46,1.874,47,2.35,54,2.872,57,2.697,58,2.15,59,2.15,61,2.902,153,2.793,536,3.75,537,3.75,538,3.75,539,4.418,540,5.542,541,4.418]],["title/injectables/PrismaService.html",[70,0.943,153,1.373]],["body/injectables/PrismaService.html",[3,0.254,4,0.221,5,0.221,7,0.557,8,1.709,13,0.024,15,0.902,17,1.236,18,0.964,19,0.601,20,0.848,22,1.709,23,0.467,24,0.794,30,0.254,31,0.161,42,0.018,43,0.018,70,1.42,71,1.816,74,0.848,150,3.468,153,2.066,167,2.724,496,2.701,520,2.945,542,3.397,543,5.781,544,5.203,545,6.504,546,5.203,547,6.121,548,4.002,549,3.397,550,4.002,551,4.002,552,4.002,553,4.002,554,4.002,555,4.002]],["title/classes/Profile.html",[31,0.139,556,2.127]],["body/classes/Profile.html",[3,0.259,4,0.225,5,0.225,7,0.567,13,0.024,15,1.106,19,0.958,20,1.385,23,0.472,30,0.259,31,0.164,42,0.018,43,0.018,74,1.385,96,2.285,113,2.749,182,1.258,185,1.84,192,3.3,278,3.588,280,2.039,300,4.368,362,3.3,556,3.239,557,3.457,558,4.073,559,4.073,560,4.073,561,4.073,562,4.073,563,4.073]],["title/controllers/ProfileController.html",[0,1.209,564,2.333]],["body/controllers/ProfileController.html",[0,0.762,2,0.762,3,0.138,4,0.12,5,0.12,7,0.303,8,1.107,12,1.867,13,0.024,15,0.869,17,1.432,18,1.117,19,0.696,20,0.983,22,1.647,23,0.526,24,0.432,25,1.233,26,0.594,30,0.138,31,0.088,32,0.865,33,0.811,40,1.647,42,0.011,43,0.011,74,1.242,83,1.34,91,3.001,93,3.136,96,2.164,100,3.389,104,2.073,105,2.535,106,1.34,107,1.34,108,1.34,109,1.34,110,0.811,111,2.073,112,3.263,113,1.47,116,0.924,118,2.78,120,1.849,124,3.086,127,1.34,158,3.136,178,1.636,208,3.232,280,2.164,297,3.232,305,4.847,374,1.534,375,2.256,376,1.639,378,2.005,380,1.47,381,2.273,383,1.632,384,3.129,385,2.273,386,2.273,388,1.06,389,1.632,392,1.632,393,2.273,395,1.06,397,1.632,398,2.273,400,1.47,401,1.47,405,1.06,411,1.47,412,1.47,414,1.47,417,1.47,418,1.47,430,1.141,479,1.849,481,1.632,556,2.073,564,2.273,565,1.849,566,2.178,567,2.178,568,2.178,569,3.369,570,2.178,571,2.178,572,3.515,573,2.178,574,2.332,575,1.849,576,2.524,577,1.849,578,1.632,579,2.178,580,2.178,581,2.178,582,2.178,583,2.178,584,2.178,585,2.178,586,2.178]],["title/modules/ProfileModule.html",[44,1.136,55,2.127]],["body/modules/ProfileModule.html",[2,1.836,3,0.258,4,0.224,5,0.224,13,0.024,23,0.571,24,0.806,30,0.258,31,0.163,42,0.018,43,0.018,44,1.725,46,1.721,47,2.227,54,2.769,55,4.144,57,2.555,58,1.975,59,1.975,61,2.749,62,2.972,110,1.512,135,2.498,138,2.498,139,1.975,141,2.498,142,2.498,564,3.928,574,3.695,575,3.445,587,3.445,588,4.059,589,3.445,590,4.059,591,4.059]],["title/injectables/ProfileService.html",[70,0.943,574,1.956]],["body/injectables/ProfileService.html",[3,0.114,4,0.099,5,0.099,7,0.25,8,0.95,13,0.024,15,0.889,17,1.507,18,1.363,19,0.732,20,1.034,22,1.603,23,0.46,24,0.356,30,0.114,31,0.072,32,0.713,33,0.669,36,1.768,40,1.5,42,0.01,43,0.01,70,0.789,71,0.815,74,1.342,96,1.707,116,0.762,150,3.314,151,1.017,152,1.017,153,1.654,156,2.056,158,2.556,160,1.017,167,2.391,169,1.017,170,0.94,178,1.149,192,3.022,278,3.004,280,2.173,297,3.202,300,3.656,320,3.682,326,2.451,374,1.353,375,2.027,376,1.408,378,1.768,388,1.408,395,1.408,405,0.874,427,1.952,430,1.515,433,1.952,435,2.236,438,1.212,439,1.017,440,1.212,442,3.293,444,1.952,446,3.903,447,2.811,450,1.212,451,1.212,452,1.952,496,1.212,498,3.535,500,2.456,504,1.524,556,1.105,572,2.563,574,1.637,576,2.167,577,1.524,592,1.524,593,1.796,594,2.893,595,1.796,596,4.88,597,1.796,598,1.796,599,1.796,600,1.796,601,1.796,602,1.796,603,2.893,604,2.893,605,2.893,606,3.633,607,1.524,608,2.893,609,1.524,610,1.796,611,1.796]],["title/classes/UpdateGameDto.html",[31,0.139,396,2.127]],["body/classes/UpdateGameDto.html",[3,0.316,4,0.275,5,0.275,13,0.023,23,0.534,26,1.357,30,0.316,31,0.2,42,0.02,43,0.02,181,2.815,182,1.536,184,3.727,374,1.853,396,3.668,404,3.727,520,2.815,612,4.222,613,3.357,614,4.974]],["title/classes/UpdateGenderDto.html",[31,0.139,468,2.127]],["body/classes/UpdateGenderDto.html",[3,0.316,4,0.275,5,0.275,13,0.023,23,0.534,26,1.357,30,0.316,31,0.2,42,0.02,43,0.02,182,1.536,275,2.815,277,3.727,374,1.853,468,3.668,472,3.727,520,2.815,613,3.357,615,4.222,616,4.974]],["title/classes/UpdateProfileDto.html",[31,0.139,572,2.127]],["body/classes/UpdateProfileDto.html",[3,0.316,4,0.275,5,0.275,13,0.023,23,0.534,26,1.357,30,0.316,31,0.2,42,0.02,43,0.02,182,1.536,297,2.815,299,3.727,374,1.853,520,2.815,572,3.668,576,3.727,613,3.357,617,4.222,618,4.974]],["title/classes/UpdateUserDto.html",[31,0.139,619,2.127]],["body/classes/UpdateUserDto.html",[3,0.316,4,0.275,5,0.275,13,0.023,23,0.534,26,1.357,30,0.316,31,0.2,42,0.02,43,0.02,182,1.536,321,2.815,323,3.727,374,1.853,520,2.815,613,3.357,619,3.668,620,4.222,621,3.727,622,4.974]],["title/classes/User.html",[31,0.139,96,1.209]],["body/classes/User.html",[3,0.263,4,0.229,5,0.229,7,0.577,13,0.023,15,1.138,18,1.416,19,0.985,20,1.128,30,0.263,31,0.167,42,0.018,43,0.018,74,1.46,96,1.862,165,3.328,166,3.619,182,1.28,185,1.862,280,2.056,325,4.405,326,3.968,337,4.519,623,3.52,624,4.147,625,4.147,626,4.147,627,4.147,628,4.147,629,4.147]],["title/controllers/UserController.html",[0,1.209,630,2.333]],["body/controllers/UserController.html",[0,0.856,2,0.856,3,0.155,4,0.135,5,0.135,7,0.34,8,1.21,12,1.967,13,0.024,15,0.915,17,1.521,18,1.186,19,0.739,20,1.044,22,1.735,23,0.498,24,0.486,25,1.385,26,0.668,30,0.155,31,0.098,32,0.972,33,0.912,40,1.735,42,0.012,43,0.012,74,1.285,83,1.506,91,3.141,93,1.928,96,0.856,97,2.078,100,3.353,104,2.266,105,2.266,106,1.506,107,1.506,108,1.506,109,1.506,110,0.912,111,3.251,112,3.415,116,1.038,124,3.251,127,3.031,178,1.758,208,3.141,280,2.222,287,2.266,321,3.141,374,1.372,375,2.397,376,1.792,378,1.792,380,1.652,381,2.485,384,3.324,385,2.485,386,2.485,388,1.191,393,2.485,395,1.191,398,2.485,400,1.652,401,1.652,405,1.191,408,1.834,411,1.652,412,1.652,414,1.652,415,2.078,417,1.652,418,1.652,430,1.282,481,1.834,619,3.646,621,2.759,630,2.485,631,2.078,632,2.078,633,2.448,634,2.448,635,2.448,636,3.683,637,2.448,638,2.448,639,2.448,640,2.448,641,2.448,642,2.506,643,2.078,644,2.448,645,2.448,646,2.448,647,2.448,648,2.448,649,2.448,650,2.448]],["title/modules/UserModule.html",[44,1.136,56,2.127]],["body/modules/UserModule.html",[2,1.836,3,0.258,4,0.224,5,0.224,13,0.024,23,0.571,24,0.806,30,0.258,31,0.163,42,0.018,43,0.018,44,1.725,46,1.721,47,2.227,54,2.769,56,4.144,57,2.555,58,1.975,59,1.975,61,2.749,62,2.972,110,1.512,135,2.498,138,2.498,139,1.975,141,2.498,142,2.498,630,3.928,642,3.695,643,3.445,651,3.445,652,4.059,653,3.445,654,4.059,655,4.059]],["title/injectables/UserService.html",[70,0.943,642,1.956]],["body/injectables/UserService.html",[3,0.124,4,0.108,5,0.108,7,0.271,8,1.013,13,0.024,15,0.952,17,1.561,18,1.324,19,0.795,20,1.072,22,1.661,23,0.475,24,0.386,30,0.124,31,0.078,32,0.773,33,0.725,36,2.121,40,1.561,42,0.01,43,0.01,70,0.841,71,0.883,74,1.276,96,1.078,116,0.825,150,3.276,151,1.101,152,1.101,153,1.731,156,1.745,158,3.036,160,1.101,163,2.31,164,3.252,165,1.745,166,2.358,167,2.774,168,2.31,169,2.168,170,2.006,178,1.731,185,1.078,191,2.617,280,2.069,320,3.281,321,3.281,325,2.31,326,2.081,341,3.266,374,1.427,375,2.121,376,1.5,378,1.864,388,1.5,395,1.5,405,0.947,427,2.081,430,1.615,433,2.081,435,1.197,438,1.313,439,1.101,440,1.313,442,2.942,444,2.081,446,2.942,447,2.942,450,1.313,451,1.313,452,2.081,453,1.651,607,1.651,609,1.651,619,2.683,621,2.31,632,2.617,642,1.745,656,1.651,657,3.831,658,1.945,659,1.945,660,1.945,661,1.945,662,1.945,663,1.945,664,1.945,665,1.945,666,1.651,667,1.651,668,1.945,669,1.945,670,1.945,671,3.831,672,4.359,673,3.084,674,3.084,675,3.084,676,3.084,677,3.084,678,3.084,679,1.945,680,3.084,681,3.831,682,4.359,683,3.084,684,3.084,685,1.945,686,1.945]],["title/coverage.html",[687,3.535]],["body/coverage.html",[0,2.031,1,1.871,5,0.153,6,2.354,13,0.024,19,0.416,28,1.57,31,0.267,42,0.014,43,0.014,70,1.676,72,2.354,81,1.871,82,2.354,88,1.707,96,0.97,114,1.57,118,1.871,132,1.707,149,2.354,153,1.101,161,1.871,170,1.452,181,1.57,183,2.354,184,3.026,243,5.985,275,1.57,276,2.354,277,3.026,297,1.57,298,2.354,299,3.026,321,1.57,322,2.354,323,3.026,362,1.57,363,2.354,372,1.871,373,2.354,396,1.707,402,1.57,426,2.354,439,1.57,455,1.707,456,2.354,459,1.871,460,2.354,468,1.707,470,1.57,488,2.354,509,2.354,510,2.354,530,2.354,531,3.026,542,2.354,556,1.707,557,2.354,564,1.871,565,2.354,572,1.707,574,1.57,578,2.078,592,2.354,612,2.354,615,2.354,617,2.354,619,1.707,620,2.354,623,2.354,630,1.871,631,2.354,642,1.57,656,2.354,687,2.078,688,2.773,689,2.773,690,2.773,691,4.039,692,2.354,693,2.773,694,5.994,695,6.143,696,2.354,697,2.773,698,4.039,699,5.563,700,4.764,701,2.354,702,4.039,703,2.354,704,2.773,705,4.039,706,2.354,707,2.773,708,2.773]],["title/dependencies.html",[47,1.763,709,2.449]],["body/dependencies.html",[13,0.024,24,0.854,26,1.174,27,4.626,31,0.219,42,0.018,43,0.018,47,1.824,110,1.602,137,3.223,139,2.093,163,3.223,268,2.435,496,2.903,519,5.078,710,6.489,711,4.302,712,4.302,713,4.302,714,4.302,715,4.302,716,4.302,717,4.302,718,4.302,719,4.302,720,4.302,721,4.302,722,4.302,723,4.302,724,4.302,725,4.302,726,4.302,727,4.302,728,4.302,729,4.302,730,4.302,731,4.302,732,4.302]],["title/miscellaneous/functions.html",[733,1.947,734,3.529]],["body/miscellaneous/functions.html",[7,0.701,13,0.022,17,1.556,18,1.214,19,0.756,20,1.068,42,0.02,43,0.02,439,3.4,701,4.278,703,5.447,706,4.278,733,3.401,734,4.278,735,5.039,736,5.039,737,5.039,738,6.417]],["title/index.html",[7,0.401,739,2.886,740,2.886]],["body/index.html",[4,0.212,13,0.024,42,0.017,43,0.017,78,3.26,187,1.743,549,3.26,687,2.878,741,3.841,742,3.841,743,5.065,744,3.841,745,3.841,746,3.841,747,3.841,748,3.841,749,5.667,750,3.841,751,3.841,752,3.841,753,3.841,754,6.557,755,3.841,756,3.841,757,6.431,758,3.841,759,3.841,760,5.065,761,3.841,762,3.841,763,3.841,764,3.841,765,5.065,766,5.065,767,3.841,768,3.841,769,3.841,770,5.065,771,5.065,772,3.841,773,3.841,774,3.841,775,3.841,776,3.841,777,3.26,778,3.841,779,3.841,780,3.841,781,3.841,782,3.841,783,3.841,784,3.841,785,3.841,786,3.841,787,3.841,788,3.26,789,3.841,790,3.841,791,3.841,792,3.841,793,3.841,794,3.841,795,3.26]],["title/classes/loginResponseDto.html",[31,0.139,161,2.333]],["body/classes/loginResponseDto.html",[3,0.259,4,0.225,5,0.225,7,0.567,12,1.96,13,0.024,15,0.912,19,0.79,23,0.472,26,1.111,30,0.259,31,0.164,42,0.018,43,0.018,74,1.115,85,3.943,91,2.979,92,4.368,96,2.285,100,2.979,101,4.467,113,2.749,139,2.561,161,3.551,182,1.258,185,1.84,187,2.388,199,2.979,261,3.3,279,3.943,531,3.052,532,3.457,696,4.949,796,5.262,797,5.262,798,5.262,799,4.073]],["title/modules.html",[46,2.001]],["body/modules.html",[13,0.02,42,0.02,43,0.02,45,3.191,46,2.005,51,2.91,52,2.91,53,2.91,54,2.005,55,2.91,56,2.91,777,5.833,800,6.871,801,6.871,802,6.871]],["title/overview.html",[803,4.005]],["body/overview.html",[2,1.147,13,0.024,28,2.959,42,0.015,43,0.015,45,4.649,46,1.391,47,1.93,48,2.785,49,2.785,50,2.785,51,4.011,52,3.874,53,3.874,54,2.827,55,3.874,56,3.874,57,2.215,58,1.596,59,1.596,71,1.488,114,2.959,129,2.785,131,2.785,132,3.217,153,2.5,182,1.013,402,2.959,421,2.785,422,2.785,470,2.959,483,2.785,484,2.785,536,2.785,537,2.785,538,2.785,574,2.959,587,2.785,589,2.785,642,2.959,651,2.785,653,2.785,803,2.785,804,3.281,805,3.281,806,3.281,807,3.281]],["title/properties.html",[185,1.454,709,2.449]],["body/properties.html",[13,0.024,42,0.021,43,0.021,185,1.843,187,2.391,788,4.474,795,4.474,808,5.271,809,5.271,810,5.271]],["title/miscellaneous/variables.html",[733,1.947,811,3.529]],["body/miscellaneous/variables.html",[7,0.669,11,4.08,13,0.024,36,2.841,40,1.579,42,0.02,43,0.02,96,2.042,118,3.94,177,3.602,178,2.319,179,4.08,578,3.602,666,4.08,667,4.08,692,4.956,733,3.244,811,4.08,812,4.807,813,4.807,814,4.807,815,4.807,816,4.807,817,4.807]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginResponseDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":243,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":809,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0})@max(2023)@apiproperty({description",{"_index":256,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["1",{"_index":273,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["1.0.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["12345678910",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":807,"title":{},"body":{"overview.html":{}}}],["18h",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["1})@max(5)@apiproperty({description",{"_index":239,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["2018",{"_index":259,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["3.0.2",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["4.8",{"_index":245,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["412b",{"_index":294,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["48a2",{"_index":308,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["5",{"_index":244,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["5.0.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["5061",{"_index":293,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["6",{"_index":805,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":804,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["70501e03",{"_index":292,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["7f2a3b191c89",{"_index":296,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["8",{"_index":806,"title":{},"body":{"overview.html":{}}}],["84266430",{"_index":306,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["9.0.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["9367",{"_index":309,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["_count",{"_index":504,"title":{},"body":{"injectables/GenderService.html":{},"injectables/ProfileService.html":{}}}],["ackerman.jpg",{"_index":314,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["adicionado",{"_index":282,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["administrador",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["agora",{"_index":205,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["amazing",{"_index":778,"title":{},"body":{"index.html":{}}}],["ano",{"_index":257,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["api",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":261,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"classes/loginResponseDto.html":{}}}],["apiproperty({description",{"_index":279,"title":{},"body":{"classes/CreateGenderDto.html":{},"classes/CreateUserDto.html":{},"classes/loginResponseDto.html":{}}}],["apitags",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":406,"title":{},"body":{"controllers/GameController.html":{}}}],["apitags('gender",{"_index":474,"title":{},"body":{"controllers/GenderController.html":{}}}],["apitags('profile",{"_index":579,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('status",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('status')@get",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":644,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":748,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["autenticado",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"classes/loginResponseDto.html":{}}}],["auth",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["auth.decorator.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.dto",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.dto.ts",{"_index":531,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{},"classes/loginResponseDto.html":{}}}],["auth.dto.ts:10",{"_index":532,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/loginResponseDto.html":{}}}],["auth.dto.ts:15",{"_index":799,"title":{},"body":{"classes/loginResponseDto.html":{}}}],["auth.dto.ts:18",{"_index":534,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.service",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":51,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":788,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":114,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["b3dc653bafe2",{"_index":310,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["bac7",{"_index":295,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["backers",{"_index":779,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(updateduser.password",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["bf9b",{"_index":307,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["body",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":802,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":800,"title":{},"body":{"modules.html":{}}}],["building",{"_index":744,"title":{},"body":{"index.html":{}}}],["cadastrado/autenticado",{"_index":529,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["catch(handleerror",{"_index":447,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["class",{"_index":31,"title":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Gender.html":{},"classes/LoginAuthDto.html":{},"classes/Profile.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/loginResponseDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/loginResponseDto.html":{}}}],["classes",{"_index":182,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Gender.html":{},"classes/LoginAuthDto.html":{},"classes/Profile.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/loginResponseDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":421,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":423,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamemodule_providers",{"_index":422,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gendermodule",{"_index":483,"title":{},"body":{"modules/GenderModule.html":{},"overview.html":{}}}],["cluster_gendermodule_imports",{"_index":485,"title":{},"body":{"modules/GenderModule.html":{}}}],["cluster_gendermodule_providers",{"_index":484,"title":{},"body":{"modules/GenderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":536,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":538,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":537,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":587,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":588,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":589,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":651,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":652,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":653,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["como",{"_index":207,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["confirmação",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpass",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":498,"title":{},"body":{"injectables/GenderService.html":{},"injectables/ProfileService.html":{}}}],["const",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["content/uploads/2021/06/20210611",{"_index":313,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('game",{"_index":407,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('gender",{"_index":475,"title":{},"body":{"controllers/GenderController.html":{}}}],["controller('profile",{"_index":580,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('user",{"_index":645,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cover_image_url",{"_index":186,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GenderService.html":{}}}],["coverage",{"_index":687,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["create",{"_index":374,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":408,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/UserController.html":{}}}],["create(creategamedto",{"_index":379,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["create(creategenderdto",{"_index":461,"title":{},"body":{"controllers/GenderController.html":{},"injectables/GenderService.html":{}}}],["create(createuserdto",{"_index":632,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":566,"title":{},"body":{"controllers/ProfileController.html":{}}}],["create(userid",{"_index":594,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createduser",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["creategamedto",{"_index":181,"title":{"classes/CreateGameDto.html":{}},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["creategenderdto",{"_index":275,"title":{"classes/CreateGenderDto.html":{}},"body":{"classes/CreateGenderDto.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"classes/UpdateGenderDto.html":{},"coverage.html":{}}}],["creategenderdto.games.map((gameid",{"_index":499,"title":{},"body":{"injectables/GenderService.html":{}}}],["creategenderdto.name",{"_index":501,"title":{},"body":{"injectables/GenderService.html":{}}}],["createparamdecorator((_",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprofiledto",{"_index":297,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createprofiledto.games.map((gameid",{"_index":603,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofiledto.image_url",{"_index":605,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofiledto.title",{"_index":604,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createuserdto",{"_index":321,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.confirmpass",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.password",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["cria",{"_index":381,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":444,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["de",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateUserDto.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"classes/LoginAuthDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"classes/loginResponseDto.html":{}}}],["default",{"_index":666,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{}}}],["deleta",{"_index":393,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":417,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":392,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":481,"title":{},"body":{"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":430,"title":{},"body":{"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":187,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/LoginAuthDto.html":{},"index.html":{},"classes/loginResponseDto.html":{},"properties.html":{}}}],["descrição",{"_index":203,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["deuses",{"_index":212,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["deve",{"_index":222,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["development",{"_index":756,"title":{},"body":{"index.html":{}}}],["diferentes",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["docs",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":211,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto/create",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/response",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/update",{"_index":405,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duro",{"_index":218,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["e",{"_index":213,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["e2e",{"_index":767,"title":{},"body":{"index.html":{}}}],["each",{"_index":302,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["edita",{"_index":398,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["efficient",{"_index":745,"title":{},"body":{"index.html":{}}}],["ele",{"_index":221,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["email",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email@email.com",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["enableshutdownhooks",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ensinar",{"_index":226,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["entities/game.entity",{"_index":441,"title":{},"body":{"injectables/GameService.html":{}}}],["entities/gender.entity",{"_index":473,"title":{},"body":{"controllers/GenderController.html":{},"injectables/GenderService.html":{}}}],["entities/profile.entity",{"_index":577,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["entities/user.entity",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":199,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"classes/loginResponseDto.html":{}}}],["executioncontext",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{}}}],["exports",{"_index":540,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":520,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":518,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":524,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6imvtywlsqgvtywlslmnvbsisimlhdci6mty2mzgymjyyncwizxhwijoxnjyzodg3ndi0fq.ycwws4jxwr5mi9rxdy5wejoguj6kwrbtxdrmxn",{"_index":797,"title":{},"body":{"classes/loginResponseDto.html":{}}}],["false",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["favoritos",{"_index":304,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["fazer",{"_index":229,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/loginResponseDto.html":{}}}],["filho",{"_index":228,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["findall",{"_index":375,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":427,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":433,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["findmany",{"_index":607,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":376,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":412,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":388,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fraca",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":743,"title":{},"body":{"index.html":{}}}],["function",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundo",{"_index":197,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game",{"_index":362,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Profile.html":{},"coverage.html":{}}}],["game.controller",{"_index":425,"title":{},"body":{"modules/GameModule.html":{}}}],["game.dto",{"_index":404,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{}}}],["game.dto.ts",{"_index":184,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["game.dto.ts:19",{"_index":252,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:26",{"_index":201,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:35",{"_index":231,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:45",{"_index":260,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:55",{"_index":246,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:62",{"_index":255,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:69",{"_index":235,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:71",{"_index":247,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:72",{"_index":236,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.service",{"_index":403,"title":{},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecontroller",{"_index":372,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":500,"title":{},"body":{"injectables/GenderService.html":{},"injectables/ProfileService.html":{}}}],["gamemodule",{"_index":52,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameplay",{"_index":233,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["gameplay_youtube_url",{"_index":188,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["games",{"_index":278,"title":{},"body":{"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"injectables/GenderService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{}}}],["gameservice",{"_index":402,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["gender",{"_index":455,"title":{"classes/Gender.html":{}},"body":{"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"coverage.html":{}}}],["gender.controller",{"_index":487,"title":{},"body":{"modules/GenderModule.html":{}}}],["gender.dto",{"_index":472,"title":{},"body":{"controllers/GenderController.html":{},"injectables/GenderService.html":{},"classes/UpdateGenderDto.html":{}}}],["gender.dto.ts",{"_index":277,"title":{},"body":{"classes/CreateGenderDto.html":{},"classes/UpdateGenderDto.html":{},"coverage.html":{}}}],["gender.dto.ts:12",{"_index":289,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["gender.dto.ts:17",{"_index":284,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["gender.service",{"_index":471,"title":{},"body":{"controllers/GenderController.html":{},"modules/GenderModule.html":{}}}],["gender/gender.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["gendercontroller",{"_index":459,"title":{"controllers/GenderController.html":{}},"body":{"controllers/GenderController.html":{},"modules/GenderModule.html":{},"coverage.html":{}}}],["gendermodule",{"_index":53,"title":{"modules/GenderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GenderModule.html":{},"modules.html":{},"overview.html":{}}}],["genders",{"_index":189,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/GameService.html":{}}}],["genderservice",{"_index":470,"title":{"injectables/GenderService.html":{}},"body":{"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"coverage.html":{},"overview.html":{}}}],["gerado",{"_index":796,"title":{},"body":{"classes/loginResponseDto.html":{}}}],["get(':id",{"_index":411,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":389,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":383,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(@req",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["getstatus(baseurl",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["getstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":739,"title":{"index.html":{}},"body":{}}],["god",{"_index":250,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["grow",{"_index":774,"title":{},"body":{"index.html":{}}}],["gênero",{"_index":286,"title":{},"body":{"classes/CreateGenderDto.html":{},"controllers/GenderController.html":{}}}],["gêneros",{"_index":465,"title":{},"body":{"controllers/GenderController.html":{}}}],["handleerror",{"_index":439,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":785,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":418,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://images3.alphacoders.com/843/843016.jpg",{"_index":200,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["https://nestjs.com",{"_index":792,"title":{},"body":{"index.html":{}}}],["https://ovicio.com.br/wp",{"_index":312,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["https://youtu.be/2qvmxm6b784",{"_index":234,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["https://youtu.be/fyiwefxocae",{"_index":254,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["httpstatus",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["ibza",{"_index":798,"title":{},"body":{"classes/loginResponseDto.html":{}}}],["id",{"_index":280,"title":{},"body":{"classes/CreateGenderDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image_url",{"_index":300,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{}}}],["imagem",{"_index":196,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["imdb",{"_index":241,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["imdb_score",{"_index":190,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GenderService.html":{}}}],["implacável",{"_index":219,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["implements",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["imprime",{"_index":384,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["include",{"_index":445,"title":{},"body":{"injectables/GameService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"classes/loginResponseDto.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":547,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{}}}],["informadas",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":70,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":753,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":755,"title":{},"body":{"index.html":{}}}],["inválido",{"_index":451,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["inválidos",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["isboolean",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isboolean()@apiproperty({description",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["isemail()@apiproperty({description",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["isnotempty",{"_index":535,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["isnumber",{"_index":262,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":238,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring",{"_index":263,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":533,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["isstring()@maxlength(24)@minlength(3)@apiproperty({description",{"_index":285,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["isstring()@minlength(11)@maxlength(11)@apiproperty({description",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(4)@apiproperty({description",{"_index":202,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring()@minlength(4)@maxlength(20)@apiproperty({description",{"_index":248,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["isstring()@minlength(4)@maxlength(30)@apiproperty({description",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":264,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["isurl()@apiproperty({description",{"_index":195,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["isuuid",{"_index":319,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isuuid(undefined",{"_index":301,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isvalidpass",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["jogo",{"_index":198,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"controllers/GameController.html":{}}}],["jogos",{"_index":287,"title":{},"body":{"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/UserController.html":{}}}],["join",{"_index":781,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"classes/loginResponseDto.html":{}}}],["jwtfromrequest",{"_index":523,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":132,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":789,"title":{},"body":{"index.html":{}}}],["kratos",{"_index":204,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["lançamento",{"_index":258,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["license",{"_index":795,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":771,"title":{},"body":{"index.html":{}}}],["link",{"_index":232,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["literal",{"_index":514,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/loginResponseDto.html":{}}}],["login(@body",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginauthdto",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginauthdto",{"_index":88,"title":{"classes/LoginAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":161,"title":{"classes/loginResponseDto.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"classes/loginResponseDto.html":{}}}],["lutar",{"_index":223,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["mail",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["matches",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginResponseDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":265,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["max(2023",{"_index":272,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["max(5",{"_index":274,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["maxdecimalplaces",{"_index":271,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["maxlength",{"_index":266,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(11",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":270,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["maxlength(24",{"_index":290,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["maxlength(30",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mesmo",{"_index":230,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["message",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":267,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(11",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":291,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["minlength(4",{"_index":269,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":770,"title":{},"body":{"index.html":{}}}],["mode",{"_index":760,"title":{},"body":{"index.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["monstros",{"_index":214,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["more",{"_index":784,"title":{},"body":{"index.html":{}}}],["mortal",{"_index":209,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["muito",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mundo",{"_index":217,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["myśliwiec",{"_index":790,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGenderDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nesse",{"_index":216,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["nest",{"_index":749,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":794,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"classes/LoginAuthDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{},"classes/loginResponseDto.html":{}}}],["new",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":742,"title":{},"body":{"index.html":{}}}],["nome",{"_index":316,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["nota",{"_index":240,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["notfoundexception",{"_index":438,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`id",{"_index":450,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":754,"title":{},"body":{"index.html":{}}}],["number",{"_index":237,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["não",{"_index":528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["nórdicos",{"_index":215,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["o",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGameDto.html":{}}}],["object",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":772,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":386,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":803,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":709,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":224,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["param",{"_index":401,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":479,"title":{},"body":{"controllers/GenderController.html":{},"controllers/ProfileController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":453,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":613,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(creategamedto",{"_index":614,"title":{},"body":{"classes/UpdateGameDto.html":{}}}],["partialtype(creategenderdto",{"_index":616,"title":{},"body":{"classes/UpdateGenderDto.html":{}}}],["partialtype(createprofiledto",{"_index":618,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createuserdto",{"_index":622,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":519,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":521,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":400,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":414,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":397,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":516,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":527,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"classes/loginResponseDto.html":{}}}],["perfil",{"_index":305,"title":{},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{}}}],["perfis",{"_index":569,"title":{},"body":{"controllers/ProfileController.html":{}}}],["please",{"_index":782,"title":{},"body":{"index.html":{}}}],["post",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":380,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@post()@apioperation({summary",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["prisma.gendercreateinput",{"_index":497,"title":{},"body":{"injectables/GenderService.html":{}}}],["prisma.genderupdateinput",{"_index":506,"title":{},"body":{"injectables/GenderService.html":{}}}],["prisma.profilecreateinput",{"_index":602,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prisma.profileupdateinput",{"_index":610,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prisma.service",{"_index":541,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":496,"title":{},"body":{"injectables/GenderService.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":54,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":153,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":762,"title":{},"body":{"index.html":{}}}],["profile",{"_index":556,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile.controller",{"_index":591,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":576,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:12",{"_index":318,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:20",{"_index":315,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:27",{"_index":311,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.service",{"_index":575,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":564,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":55,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":191,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/UserService.html":{}}}],["profileservice",{"_index":574,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":741,"title":{},"body":{"index.html":{}}}],["project",{"_index":773,"title":{},"body":{"index.html":{}}}],["promise",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":185,"title":{"properties.html":{}},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Gender.html":{},"classes/LoginAuthDto.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{},"properties.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["que",{"_index":220,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["read",{"_index":783,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realiza",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["reino",{"_index":210,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["remove",{"_index":377,"title":{},"body":{"controllers/GameController.html":{}}}],["remove(@param('id",{"_index":419,"title":{},"body":{"controllers/GameController.html":{}}}],["remove(id",{"_index":391,"title":{},"body":{"controllers/GameController.html":{}}}],["repository",{"_index":752,"title":{},"body":{"index.html":{}}}],["req",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":442,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["results",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginResponseDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["rpg",{"_index":288,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["run",{"_index":757,"title":{},"body":{"index.html":{}}}],["running",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":746,"title":{},"body":{"index.html":{}}}],["score",{"_index":242,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["secret",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":526,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":446,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["senha",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["senha@123",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["senhas",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":281,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["server",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["seu",{"_index":227,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["side",{"_index":747,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["sirdav1d",{"_index":317,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["sobrenome",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sobreviver",{"_index":225,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"modules/GenderModule.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenderDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"classes/loginResponseDto.html":{}}}],["sponsors",{"_index":776,"title":{},"body":{"index.html":{}}}],["src/.../handleerror.ts",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":530,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/response",{"_index":696,"title":{},"body":{"coverage.html":{},"classes/loginResponseDto.html":{}}}],["src/auth/jwt",{"_index":509,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/logged",{"_index":578,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/dto/create",{"_index":183,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["src/game/dto/update",{"_index":612,"title":{},"body":{"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["src/game/entities/game.entity",{"_index":563,"title":{},"body":{"classes/Profile.html":{}}}],["src/game/entities/game.entity.ts",{"_index":363,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:2",{"_index":367,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:3",{"_index":369,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:4",{"_index":364,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:5",{"_index":365,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:6",{"_index":371,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:7",{"_index":368,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:8",{"_index":370,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:9",{"_index":366,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":373,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:30",{"_index":382,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:38",{"_index":387,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:46",{"_index":390,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:54",{"_index":399,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:63",{"_index":394,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":424,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":426,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:12",{"_index":429,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:23",{"_index":432,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:29",{"_index":434,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:40",{"_index":436,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:44",{"_index":437,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:57",{"_index":431,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:9",{"_index":428,"title":{},"body":{"injectables/GameService.html":{}}}],["src/gender/dto/create",{"_index":276,"title":{},"body":{"classes/CreateGenderDto.html":{},"coverage.html":{}}}],["src/gender/dto/update",{"_index":615,"title":{},"body":{"classes/UpdateGenderDto.html":{},"coverage.html":{}}}],["src/gender/entities/gender.entity.ts",{"_index":456,"title":{},"body":{"classes/Gender.html":{},"coverage.html":{}}}],["src/gender/entities/gender.entity.ts:2",{"_index":457,"title":{},"body":{"classes/Gender.html":{}}}],["src/gender/entities/gender.entity.ts:3",{"_index":458,"title":{},"body":{"classes/Gender.html":{}}}],["src/gender/gender.controller.ts",{"_index":460,"title":{},"body":{"controllers/GenderController.html":{},"coverage.html":{}}}],["src/gender/gender.controller.ts:31",{"_index":462,"title":{},"body":{"controllers/GenderController.html":{}}}],["src/gender/gender.controller.ts:39",{"_index":466,"title":{},"body":{"controllers/GenderController.html":{}}}],["src/gender/gender.controller.ts:47",{"_index":467,"title":{},"body":{"controllers/GenderController.html":{}}}],["src/gender/gender.controller.ts:55",{"_index":469,"title":{},"body":{"controllers/GenderController.html":{}}}],["src/gender/gender.controller.ts:67",{"_index":463,"title":{},"body":{"controllers/GenderController.html":{}}}],["src/gender/gender.module.ts",{"_index":486,"title":{},"body":{"modules/GenderModule.html":{}}}],["src/gender/gender.service.ts",{"_index":488,"title":{},"body":{"injectables/GenderService.html":{},"coverage.html":{}}}],["src/gender/gender.service.ts:10",{"_index":489,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:13",{"_index":490,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:24",{"_index":492,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:30",{"_index":493,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:52",{"_index":494,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:56",{"_index":495,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/gender/gender.service.ts:85",{"_index":491,"title":{},"body":{"injectables/GenderService.html":{}}}],["src/main.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":539,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/dto/create",{"_index":298,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":617,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":557,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts:5",{"_index":559,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:6",{"_index":562,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:7",{"_index":558,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:8",{"_index":561,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:9",{"_index":560,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/profile.controller.ts",{"_index":565,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:33",{"_index":567,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:44",{"_index":570,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:52",{"_index":571,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:60",{"_index":573,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:73",{"_index":568,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":590,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":592,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:10",{"_index":593,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:103",{"_index":597,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:13",{"_index":595,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:38",{"_index":598,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:52",{"_index":599,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:70",{"_index":600,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:74",{"_index":601,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/dto/create",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":620,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"classes/loginResponseDto.html":{}}}],["src/user/entities/user.entity.ts",{"_index":623,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":626,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":628,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":625,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":629,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":624,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":627,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":631,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":633,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":641,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":654,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":656,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:43",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:51",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:62",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:66",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:91",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handleerror",{"_index":440,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["src/utils/handleerror.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":758,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":761,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":763,"title":{},"body":{"index.html":{}}}],["started",{"_index":740,"title":{"index.html":{}},"body":{}}],["starter",{"_index":751,"title":{},"body":{"index.html":{}}}],["statements",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["stay",{"_index":786,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["strategy.ts",{"_index":510,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["strategy.ts:16",{"_index":515,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy.ts:7",{"_index":512,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/loginResponseDto.html":{}}}],["summary",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":777,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":801,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["são",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":766,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":769,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":768,"title":{},"body":{"index.html":{}}}],["tests",{"_index":765,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":775,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus(baseurl",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(loginauthdto",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":452,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.findbyid(id).catch(handleerror",{"_index":609,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.gameservice.create(creategamedto",{"_index":409,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.delete(id",{"_index":420,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findall",{"_index":410,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findone(id",{"_index":413,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.update(id",{"_index":416,"title":{},"body":{"controllers/GameController.html":{}}}],["this.genderservice.create(creategenderdto",{"_index":476,"title":{},"body":{"controllers/GenderController.html":{}}}],["this.genderservice.delete(id",{"_index":482,"title":{},"body":{"controllers/GenderController.html":{}}}],["this.genderservice.findall",{"_index":477,"title":{},"body":{"controllers/GenderController.html":{}}}],["this.genderservice.findone(id",{"_index":478,"title":{},"body":{"controllers/GenderController.html":{}}}],["this.genderservice.update(id",{"_index":480,"title":{},"body":{"controllers/GenderController.html":{}}}],["this.jwtservice.sign",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game",{"_index":443,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.delete",{"_index":454,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findmany",{"_index":448,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findunique",{"_index":449,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.gender",{"_index":507,"title":{},"body":{"injectables/GenderService.html":{}}}],["this.prisma.gender.create",{"_index":502,"title":{},"body":{"injectables/GenderService.html":{}}}],["this.prisma.gender.delete",{"_index":508,"title":{},"body":{"injectables/GenderService.html":{}}}],["this.prisma.gender.findmany",{"_index":503,"title":{},"body":{"injectables/GenderService.html":{}}}],["this.prisma.gender.findunique",{"_index":505,"title":{},"body":{"injectables/GenderService.html":{}}}],["this.prisma.profile",{"_index":606,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.delete",{"_index":611,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findunique",{"_index":608,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.user",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.profileservice.create(user.id",{"_index":581,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.delete(id",{"_index":586,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall",{"_index":582,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findone(id",{"_index":583,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(id",{"_index":584,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userselect",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":646,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":650,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":647,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":648,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":649,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":192,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/Game.html":{},"injectables/GenderService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{}}}],["todos",{"_index":385,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/loginResponseDto.html":{}}}],["touch",{"_index":787,"title":{},"body":{"index.html":{}}}],["trailer",{"_index":253,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["trailer_youtube_url",{"_index":193,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["transformer",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":320,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["true})@apiproperty({description",{"_index":303,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["twitter",{"_index":793,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Gender.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/loginResponseDto.html":{}}}],["typescript",{"_index":750,"title":{},"body":{"index.html":{}}}],["título",{"_index":249,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ui",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":208,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"classes/CreateGenderDto.html":{}}}],["unit",{"_index":764,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":435,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":810,"title":{},"body":{"properties.html":{}}}],["update",{"_index":378,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":415,"title":{},"body":{"controllers/GameController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":395,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenderController.html":{},"injectables/GenderService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateduser",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.password",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["updategamedto",{"_index":396,"title":{"classes/UpdateGameDto.html":{}},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["updategenderdto",{"_index":468,"title":{"classes/UpdateGenderDto.html":{}},"body":{"controllers/GenderController.html":{},"injectables/GenderService.html":{},"classes/UpdateGenderDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":572,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":619,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useguards",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenderController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":96,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/loginResponseDto.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":655,"title":{},"body":{"modules/UserModule.html":{}}}],["user.cpf",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":621,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:59",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":585,"title":{},"body":{"controllers/ProfileController.html":{}}}],["user.password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":643,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":630,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":596,"title":{},"body":{"injectables/ProfileService.html":{}}}],["usermodule",{"_index":56,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":642,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"classes/loginResponseDto.html":{}}}],["usuários",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["validate",{"_index":511,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":513,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":268,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenderDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"dependencies.html":{}}}],["validtoken",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["validtoken(@loggeduser",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["validtoken(user",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["value",{"_index":667,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":811,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":808,"title":{},"body":{"properties.html":{}}}],["vive",{"_index":206,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["voc",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["void",{"_index":464,"title":{},"body":{"controllers/GenderController.html":{}}}],["war",{"_index":251,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["watch",{"_index":759,"title":{},"body":{"index.html":{}}}],["website",{"_index":791,"title":{},"body":{"index.html":{}}}],["x",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["year",{"_index":194,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["you'd",{"_index":780,"title":{},"body":{"index.html":{}}}],["z",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenderModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Status')@Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @ApiTags('Status')\n  @Get()\n  getStatus(@Req() req: Request) {\n    const baseurl = req.protocol + '://' + req.get('host');\n    return this.appService.getStatus(baseurl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenderModule\n\nGenderModule\n\nAppModule -->\n\nGenderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            GenderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { GenderModule } from './gender/gender.module';\nimport { GameModule } from './game/game.module';\nimport { UserModule } from './user/user.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [PrismaModule, GenderModule, GameModule, UserModule, ProfileModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseurl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseurl: string) {\n    return {\n      status: 'Server is running',\n      docs: baseurl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginAuthDto: LoginAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@Post()@ApiOperation({summary: 'Realiza login pelo token de auth'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginAuthDto\n                                    \n                                                LoginAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validToken\n                        \n                    \n                \n            \n            \n                \nvalidToken(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpCode,\n  HttpStatus,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginAuthDto } from './dto/create-auth.dto';\nimport { LoggedUser } from './Logged-auth.decorator';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @Post()\n  @ApiOperation({\n    summary: 'Realiza login pelo token de auth',\n  })\n  login(@Body() loginAuthDto: LoginAuthDto) {\n    return this.authService.login(loginAuthDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  validToken(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt-strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '18h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginAuthDto\n                                    \n                                                LoginAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginAuthDto } from './dto/create-auth.dto';\nimport { loginResponseDto } from './dto/response-auth.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginAuthDto: LoginAuthDto): Promise {\n    const { email, password } = loginAuthDto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário ou senha inválidos');\n    }\n\n    const isValidPass = await bcrypt.compare(password, user.password);\n\n    if (!isValidPass) {\n      throw new UnauthorizedException('Usuário ou senha inválidos');\n    }\n\n    delete user.password;\n    delete user.cpf;\n    return {\n      token: this.jwtService.sign({ email }),\n      user: user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameDto.html":{"url":"classes/CreateGameDto.html","title":"class - CreateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/create-game.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cover_image_url\n                            \n                            \n                                description\n                            \n                            \n                                gameplay_youtube_url\n                            \n                            \n                                    Optional\n                                genders\n                            \n                            \n                                imdb_score\n                            \n                            \n                                    Optional\n                                profiles\n                            \n                            \n                                title\n                            \n                            \n                                trailer_youtube_url\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cover_image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de fundo do jogo', example: 'https://images3.alphacoders.com/843/843016.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@ApiProperty({description: 'Descrição do jogo', example: 'Kratos agora vive como um mortal no reino dos deuses e monstros nórdicos. É nesse mundo duro e implacável que ele deve lutar para sobreviver... e ensinar seu filho a fazer o mesmo.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameplay_youtube_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Link para gameplay do jogo', example: 'https://youtu.be/2qVmxM6b784'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        genders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdb_score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 1})@Max(5)@ApiProperty({description: 'Nota do jogo no Imdb Score (0 a 5)', example: 4.8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)@ApiProperty({description: 'Título do jogo', example: 'God of War'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trailer_youtube_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Link para trailer do jogo', example: 'https://youtu.be/FyIwEFXOcaE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 0})@Max(2023)@ApiProperty({description: 'Ano de lançamento do jogo', example: 2018})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNumber,\n  IsString,\n  IsUrl,\n  Max,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateGameDto {\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @ApiProperty({\n    description: 'Título do jogo',\n    example: 'God of War',\n  })\n  title: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de fundo do jogo',\n    example: 'https://images3.alphacoders.com/843/843016.jpg',\n  })\n  cover_image_url: string;\n\n  @IsString()\n  @MinLength(4)\n  @ApiProperty({\n    description: 'Descrição do jogo',\n    example:\n      'Kratos agora vive como um mortal no reino dos deuses e monstros nórdicos. É nesse mundo duro e implacável que ele deve lutar para sobreviver... e ensinar seu filho a fazer o mesmo.',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 0,\n  })\n  @Max(2023)\n  @ApiProperty({\n    description: 'Ano de lançamento do jogo',\n    example: 2018,\n  })\n  year: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 1,\n  })\n  @Max(5)\n  @ApiProperty({\n    description: 'Nota do jogo no Imdb Score (0 a 5)',\n    example: 4.8,\n  })\n  imdb_score: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link para trailer do jogo',\n    example: 'https://youtu.be/FyIwEFXOcaE',\n  })\n  trailer_youtube_url: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link para gameplay do jogo',\n    example: 'https://youtu.be/2qVmxM6b784',\n  })\n  gameplay_youtube_url: string;\n\n  profiles?: string[];\n  genders?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGenderDto.html":{"url":"classes/CreateGenderDto.html","title":"class - CreateGenderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGenderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gender/dto/create-gender.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                games\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do jogo a ser Adicionado', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gender/dto/create-gender.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(24)@MinLength(3)@ApiProperty({description: 'Gênero de jogos', example: 'RPG'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gender/dto/create-gender.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class CreateGenderDto {\n  @IsString()\n  @MaxLength(24)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'Gênero de jogos',\n    example: 'RPG',\n  })\n  name: string;\n  @ApiProperty({\n    description: 'ID do jogo a ser Adicionado',\n    example: ['70501e03-5061-412b-bac7-7f2a3b191c89'],\n  })\n  games?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                games\n                            \n                            \n                                image_url\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Jogos favoritos do perfil', example: '[\"84266430-bf9b-48a2-9367-b3dc653bafe2\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do perfil', example: 'https://ovicio.com.br/wp-content/uploads/2021/06/20210611-ackerman.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)@ApiProperty({description: 'Nome do perfil', example: 'sirdav1d'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, IsUUID, MaxLength, MinLength } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @ApiProperty({\n    description: 'Nome do perfil',\n    example: 'sirdav1d',\n  })\n  title: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do perfil',\n    example:\n      'https://ovicio.com.br/wp-content/uploads/2021/06/20210611-ackerman.jpg',\n  })\n  image_url: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Jogos favoritos do perfil',\n    example: '[\"84266430-bf9b-48a2-9367-b3dc653bafe2\"]',\n  })\n  games: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Confirmação de senha do usuário', example: 'senhA@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(11)@MaxLength(11)@ApiProperty({description: 'CPF do usuário', example: '12345678910'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'E-mail do usuário', example: 'email@email.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({description: 'Você é um administrador? (true or false)', example: 'true'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(30)@ApiProperty({description: 'Nome do usuário', example: 'Nome Sobrenome'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário', example: 'senhA@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @MinLength(4)\n  @MaxLength(30)\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Nome Sobrenome',\n  })\n  name: string;\n\n  @IsEmail()\n  @ApiProperty({\n    description: 'E-mail do usuário',\n    example: 'email@email.com',\n  })\n  email: string;\n\n  @IsString()\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'senhA@123',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'Confirmação de senha do usuário',\n    example: 'senhA@123',\n  })\n  confirmPass: string;\n\n  @IsString()\n  @MinLength(11)\n  @MaxLength(11)\n  @ApiProperty({\n    description: 'CPF do usuário',\n    example: '12345678910',\n  })\n  cpf: string;\n\n  @IsBoolean()\n  @ApiProperty({\n    description: 'Você é um administrador? (true or false)',\n    example: 'true',\n  })\n  isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cover_image_url\n                            \n                            \n                                description\n                            \n                            \n                                gameplay_youtube_url\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imdb_score\n                            \n                            \n                                title\n                            \n                            \n                                trailer_youtube_url\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cover_image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameplay_youtube_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdb_score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trailer_youtube_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Game {\n  id?: string;\n  title: string;\n  cover_image_url: string;\n  description: string;\n  year: number;\n  imdb_score: number;\n  trailer_youtube_url: string;\n  gameplay_youtube_url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createGameDto: CreateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cria um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGameDto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Imprime todos os jogos'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Imprime um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deleta um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateGameDto: UpdateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Edita um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGameDto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  HttpCode,\n  UseGuards,\n} from '@nestjs/common';\nimport { GameService } from './game.service';\nimport { CreateGameDto } from './dto/create-game.dto';\nimport { UpdateGameDto } from './dto/update-game.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Game')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('game')\nexport class GameController {\n  constructor(private readonly gameService: GameService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cria um jogo',\n  })\n  create(@Body() createGameDto: CreateGameDto) {\n    return this.gameService.create(createGameDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Imprime todos os jogos',\n  })\n  findAll() {\n    return this.gameService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Imprime um jogo pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.gameService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Edita um jogo pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateGameDto: UpdateGameDto) {\n    return this.gameService.update(id, updateGameDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deleta um jogo pelo ID',\n  })\n  remove(@Param('id') id: string) {\n    return this.gameService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GameModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GameService } from './game.service';\nimport { GameController } from './game.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createGameDto: CreateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGameDto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateGameDto: UpdateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGameDto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handleError';\nimport { CreateGameDto } from './dto/create-game.dto';\nimport { UpdateGameDto } from './dto/update-game.dto';\nimport { Game } from './entities/game.entity';\n\n@Injectable()\nexport class GameService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createGameDto: CreateGameDto): Promise {\n    const response: Game = { ...createGameDto };\n\n    return this.prisma.game\n      .create({\n        data: response,\n        include: { genders: { select: { name: true } } },\n      })\n      .catch(handleError);\n  }\n\n  findAll(): Promise {\n    return this.prisma.game.findMany({\n      include: { genders: { select: { name: true } } },\n    });\n  }\n\n  async findById(id: string) {\n    const response = await this.prisma.game.findUnique({ where: { id } });\n    if (!response) {\n      throw new NotFoundException(`ID: '${id}' INVÁLIDO`);\n    }\n    return this.prisma.game.findUnique({\n      where: { id },\n      include: { genders: { select: { name: true } } },\n    });\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async update(id: string, updateGameDto: UpdateGameDto): Promise {\n    await this.findById(id);\n    const response: Partial = { ...updateGameDto };\n\n    return this.prisma.game\n      .update({\n        where: { id },\n        data: response,\n        include: { genders: { select: { name: true } } },\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.game.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Gender.html":{"url":"classes/Gender.html","title":"class - Gender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Gender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gender/entities/gender.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/gender/entities/gender.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/gender/entities/gender.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Gender {\n  id?: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GenderController.html":{"url":"controllers/GenderController.html","title":"controller - GenderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GenderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gender/gender.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gender\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createGenderDto: CreateGenderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cria um gênero de jogos'})\n                \n            \n\n            \n                \n                    Defined in src/gender/gender.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGenderDto\n                                    \n                                                CreateGenderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deleta um gênero de jogos pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/gender/gender.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Imprime todos os gêneros de jogos'})\n                \n            \n\n            \n                \n                    Defined in src/gender/gender.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Imprime um gênero de jogos pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/gender/gender.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateGenderDto: UpdateGenderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Edita um gênero de jogos pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/gender/gender.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGenderDto\n                                    \n                                                UpdateGenderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { GenderService } from './gender.service';\nimport { CreateGenderDto } from './dto/create-gender.dto';\nimport { UpdateGenderDto } from './dto/update-gender.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Gender } from './entities/gender.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Gender')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('gender')\nexport class GenderController {\n  constructor(private readonly genderService: GenderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cria um gênero de jogos',\n  })\n  create(@Body() createGenderDto: CreateGenderDto): Promise {\n    return this.genderService.create(createGenderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Imprime todos os gêneros de jogos',\n  })\n  findAll(): Promise {\n    return this.genderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Imprime um gênero de jogos pelo ID',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.genderService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Edita um gênero de jogos pelo ID',\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateGenderDto: UpdateGenderDto,\n  ): Promise {\n    return this.genderService.update(id, updateGenderDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deleta um gênero de jogos pelo ID',\n  })\n  delete(@Param('id') id: string): void {\n    this.genderService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenderModule.html":{"url":"modules/GenderModule.html","title":"module - GenderModule","body":"\n                   \n\n\n\n\n    Modules\n    GenderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GenderModule\n\n\n\ncluster_GenderModule_providers\n\n\n\ncluster_GenderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGenderModule\n\nGenderModule\n\nGenderModule -->\n\nPrismaModule->GenderModule\n\n\n\n\n\nGenderService\n\nGenderService\n\nGenderModule -->\n\nGenderService->GenderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gender/gender.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GenderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GenderService } from './gender.service';\nimport { GenderController } from './gender.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [GenderController],\n  providers: [GenderService],\n})\nexport class GenderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenderService.html":{"url":"injectables/GenderService.html","title":"injectable - GenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gender/gender.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/gender/gender.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createGenderDto: CreateGenderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGenderDto\n                                    \n                                                CreateGenderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, createGenderDto: UpdateGenderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/gender/gender.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createGenderDto\n                                    \n                                                UpdateGenderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handleError';\nimport { CreateGenderDto } from './dto/create-gender.dto';\nimport { UpdateGenderDto } from './dto/update-gender.dto';\nimport { Gender } from './entities/gender.entity';\n\n@Injectable()\nexport class GenderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createGenderDto: CreateGenderDto): Promise {\n    const response: Prisma.GenderCreateInput = {\n      games: {\n        connect: createGenderDto.games.map((gameId) => ({ id: gameId })),\n      },\n      name: createGenderDto.name,\n    };\n\n    return this.prisma.gender.create({ data: response }).catch(handleError);\n  }\n\n  findAll(): Promise {\n    return this.prisma.gender.findMany({\n      select: { name: true, id: true, _count: { select: { games: true } } },\n    });\n  }\n\n  async findById(id: string) {\n    const response = await this.prisma.gender.findUnique({ where: { id } });\n    if (!response) {\n      throw new NotFoundException(`ID: '${id}' INVÁLIDO`);\n    }\n    return this.prisma.gender.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        name: true,\n        games: {\n          select: {\n            id: true,\n            cover_image_url: true,\n            imdb_score: true,\n            title: true,\n          },\n        },\n      },\n    });\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async update(id: string, createGenderDto: UpdateGenderDto): Promise {\n    await this.findById(id);\n    const response: Prisma.GenderUpdateInput = {\n      games: {\n        connect: createGenderDto.games.map((gameId) => ({ id: gameId })),\n      },\n      name: createGenderDto.name,\n    };\n\n    return this.prisma.gender\n      .update({\n        where: { id },\n        data: response,\n        select: {\n          id: true,\n          name: true,\n          games: {\n            select: {\n              id: true,\n              cover_image_url: true,\n              imdb_score: true,\n              title: true,\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.gender.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário não cadastrado/autenticado');\n    }\n\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAuthDto.html":{"url":"classes/LoginAuthDto.html","title":"class - LoginAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'E-mail do usuário', example: 'email@email.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'senhA@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginAuthDto {\n  @IsEmail()\n  @ApiProperty({\n    description: 'E-mail do usuário',\n    example: 'email@email.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'senhA@123',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  [x: string]: any;\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                games\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from 'src/game/entities/game.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Profile {\n  id?: string;\n  user?: User;\n  games?: Game[];\n  title: string;\n  image_url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createProfileDto: CreateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cria um perfil de usuário'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deleta um perfil de usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Imprime todos os perfis de usuário'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Imprime um perfil de usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: User, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Edita um perfil de usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  HttpCode,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { Profile } from './entities/profile.entity';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/Logged-auth.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@ApiTags('Profile')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cria um perfil de usuário',\n  })\n  create(\n    @LoggedUser() user: User,\n    @Body() createProfileDto: CreateProfileDto,\n  ): Promise {\n    return this.profileService.create(user.id, createProfileDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Imprime todos os perfis de usuário',\n  })\n  findAll(): Promise {\n    return this.profileService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Imprime um perfil de usuário pelo ID',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.profileService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Edita um perfil de usuário pelo ID',\n  })\n  update(\n    @Param('id') id: string,\n    @LoggedUser() user: User,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ): Promise {\n    return this.profileService.update(id, user.id, updateProfileDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deleta um perfil de usuário pelo ID',\n  })\n  delete(@Param('id') id: string): Promise {\n    return this.profileService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: string, createProfileDto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, userId: string, createProfileDto: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handleError';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { Profile } from './entities/profile.entity';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(userId: string, createProfileDto: CreateProfileDto) {\n    const response: Prisma.ProfileCreateInput = {\n      user: {\n        connect: { id: userId },\n      },\n      games: {\n        connect: createProfileDto.games.map((gameId) => ({ id: gameId })),\n      },\n      title: createProfileDto.title,\n      image_url: createProfileDto.image_url,\n    };\n    return await this.prisma.profile\n      .create({\n        data: response,\n        select: {\n          id: true,\n          title: true,\n          image_url: true,\n          user: { select: { name: true, isAdmin: true } },\n          games: { select: { title: true } },\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(): Promise {\n    return this.prisma.profile\n      .findMany({\n        select: {\n          id: true,\n          title: true,\n          image_url: true,\n          user: { select: { name: true, isAdmin: true } },\n          _count: { select: { games: true } },\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findById(id: string) {\n    const response = await this.prisma.profile.findUnique({\n      where: { id },\n    });\n    if (!response) {\n      throw new NotFoundException(`ID: '${id}' INVÁLIDO`);\n    }\n    return this.prisma.profile.findUnique({\n      where: { id },\n      select: {\n        user: { select: { name: true } },\n        image_url: true,\n        title: true,\n        games: true,\n      },\n    });\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id).catch(handleError);\n  }\n\n  async update(id: string, userId: string, createProfileDto: UpdateProfileDto) {\n    await this.findById(id);\n\n    const response: Prisma.ProfileUpdateInput = {\n      user: {\n        connect: { id: userId },\n      },\n      games: {\n        connect: createProfileDto.games.map((gameId) => ({ id: gameId })),\n      },\n      title: createProfileDto.title,\n      image_url: createProfileDto.image_url,\n    };\n\n    return this.prisma.profile\n      .update({\n        where: { id },\n        data: response,\n        select: {\n          id: true,\n          title: true,\n          image_url: true,\n          user: { select: { name: true, isAdmin: true } },\n          games: { select: { title: true } },\n        },\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.profile.delete({ where: { id } }).catch(handleError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameDto.html":{"url":"classes/UpdateGameDto.html","title":"class - UpdateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/update-game.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateGameDto } from './create-game.dto';\n\nexport class UpdateGameDto extends PartialType(CreateGameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGenderDto.html":{"url":"classes/UpdateGenderDto.html","title":"class - UpdateGenderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGenderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gender/dto/update-gender.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateGenderDto } from './create-gender.dto';\n\nexport class UpdateGenderDto extends PartialType(CreateGenderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  cpf: string;\n  isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cria um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deleta um usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Imprime todos os usuários de jogos'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Imprime um usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Edita usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  HttpCode,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cria um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Imprime todos os usuários de jogos',\n  })\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Imprime um usuário pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Edita usuário pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deleta um usuário pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, createUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cpf: false,\n    email: true,\n    name: true,\n    id: true,\n    isAdmin: true,\n    password: false,\n    profiles: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handleError';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  private userSelect = {\n    cpf: false,\n    email: true,\n    name: true,\n    id: true,\n    isAdmin: true,\n    password: false,\n    profiles: true,\n  };\n\n  async create(createUserDto: CreateUserDto): Promise {\n    if (createUserDto.password != createUserDto.confirmPass) {\n      throw new BadRequestException('As senhas informadas são diferentes.');\n    }\n\n    delete createUserDto.confirmPass;\n\n    const createdUser: User = {\n      ...createUserDto,\n      password: await bcrypt.hash(createUserDto.password, 10),\n    };\n    return this.prisma.user\n      .create({ data: createdUser, select: this.userSelect })\n      .catch(handleError);\n  }\n\n  findAll(): Promise {\n    return this.prisma.user\n      .findMany({\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async findById(id: string) {\n    const response = await this.prisma.user.findUnique({ where: { id } });\n    if (!response) {\n      throw new NotFoundException(`ID: '${id}' INVÁLIDO`);\n    }\n    return this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id).catch(handleError);\n  }\n\n  async update(id: string, createUserDto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (createUserDto.password) {\n      if (createUserDto.password != createUserDto.confirmPass) {\n        throw new BadRequestException('As senhas informadas são diferentes.');\n      }\n    }\n\n    delete createUserDto.confirmPass;\n    const updatedUser: Partial = { ...createUserDto };\n\n    if (updatedUser.password) {\n      updatedUser.password = await bcrypt.hash(updatedUser.password, 10);\n\n      const response = await this.prisma.user\n        .update({\n          data: updatedUser,\n          where: { id },\n          select: this.userSelect,\n        })\n        .catch(handleError);\n      return response;\n    }\n  }\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.user.delete({ where: { id } }).catch(handleError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/Logged-auth.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            LoginAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/response-auth.dto.ts\n            \n            class\n            loginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/dto/create-game.dto.ts\n            \n            class\n            CreateGameDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/game/dto/update-game.dto.ts\n            \n            class\n            UpdateGameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gender/dto/create-gender.dto.ts\n            \n            class\n            CreateGenderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gender/dto/update-gender.dto.ts\n            \n            class\n            UpdateGenderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gender/entities/gender.entity.ts\n            \n            class\n            Gender\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gender/gender.controller.ts\n            \n            controller\n            GenderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/gender/gender.service.ts\n            \n            injectable\n            GenderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handleError.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handleError.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handleError.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/loginResponseDto.html":{"url":"classes/loginResponseDto.html","title":"class - loginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  loginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/response-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtYWlsQGVtYWlsLmNvbSIsImlhdCI6MTY2MzgyMjYyNCwiZXhwIjoxNjYzODg3NDI0fQ.yCwWs4jxWr5Mi9RXdy5WEjOguj6kwRBTXDRmXN-iBZA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/response-auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/response-auth.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class loginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtYWlsQGVtYWlsLmNvbSIsImlhdCI6MTY2MzgyMjYyNCwiZXhwIjoxNjYzODg3NDI0fQ.yCwWs4jxWr5Mi9RXdy5WEjOguj6kwRBTXDRmXN-iBZA',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GenderModule\n\n\n\ncluster_GenderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenderModule\n\nGenderModule\n\nAppModule -->\n\nGenderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\nGenderModule -->\n\nPrismaModule->GenderModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGenderService\n\nGenderService\n\nGenderModule -->\n\nGenderService->GenderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../Logged-auth.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/Logged-auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n  delete user.cpf;\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
